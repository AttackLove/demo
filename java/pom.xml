<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.7.RELEASE</version>
	</parent>
	<groupId>com.demo</groupId>
	<artifactId>demo</artifactId>
	<version>${revision}</version>
	<packaging>jar</packaging>

	<name>demo</name>
	<url>http://maven.apache.org</url>

	<properties>
		<!-- Default version if not set via -Drevision. See http://maven.apache.org/maven-ci-friendly.html -->
        <revision>-SNAPSHOT</revision>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- maven-compiler-plugin -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<jdk.version>1.8</jdk.version>
		<!-- <maven.test.skip>false</maven.test.skip> -->
		<spring-cloud.version>Dalston.SR3</spring-cloud.version>
		<springfox-version>2.6.1</springfox-version>
		
		<!-- test -->
		<unit-tests.skip>false</unit-tests.skip>
		<integration-tests.skip>false</integration-tests.skip>
		
		<!-- docker -->
		<docker.tags.version>${revision}</docker.tags.version>
		<docker.image>10.1.202.102:8082/test/${project.artifactId}</docker.image>
		<docker.base.image>10.1.202.102:8082/aspire-base/centos7-jdk8</docker.base.image>
		<docker.host>tcp://10.1.202.102:2375</docker.host>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>compile</scope>
			<optional>true</optional>
			<version>1.16.14</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<!-- swagger ui 相关jar -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox-version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.25</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.0.8</version>
		</dependency>
		<dependency>
			<groupId>tk.mybatis</groupId>
			<artifactId>mapper-spring-boot-starter</artifactId>
			<version>1.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.49</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
            <groupId>de.triology.versionName</groupId>
            <artifactId>versionName</artifactId>
            <version>1.0.2</version>
        </dependency>

	</dependencies>
	<build>
		<resources>
            <resource>
                <!-- Filter for version name in properties -->
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>app.properties</include>
                </includes>
            </resource>
            <resource>
                <!-- Filter for version name in properties -->
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>app.properties</exclude>
                </excludes>
            </resource>
        </resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.4.0.905</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<jvmArguments>-Xmx512m -XX:MaxDirectMemorySize=1200m</jvmArguments>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
					<!-- <execution> <id>pre-integration-test</id> <goals> <goal>start</goal> 
						</goals> <configuration> <skip>${integration-tests.skip}</skip> </configuration> 
						</execution> <execution> <id>post-integration-test</id> <goals> <goal>stop</goal> 
						</goals> <configuration> <skip>${integration-tests.skip}</skip> </configuration> 
						</execution> -->
				</executions>
			</plugin>
			<!-- <plugin> <artifactId>maven-failsafe-plugin</artifactId> <configuration> 
				<skipTests>${integration-tests.skip}</skipTests> <includes> <include>**/*IT.java</include> 
				</includes> </configuration> <executions> <execution> <goals> <goal>integration-test</goal> 
				<goal>verify</goal> </goals> </execution> </executions> </plugin> -->
			<!-- ut -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<skipTests>${unit-tests.skip}</skipTests>
				</configuration>
				<executions>
					<execution>
						<id>run-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skipTests>${unit-tests.skip}</skipTests>
							<includes>
								<include>**/*UT.java</include>
							</includes>
							<excludes>
								<exclude>**/*IT.java</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- it -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<skipITs>${integration-tests.skip}</skipITs>
					<includes>
						<include>**/*IT.java</include>
					</includes>
					<excludes>
						<include>**/*UT.java</include>
					</excludes>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
				</configuration>
			</plugin>
			<!-- code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-prepare-agent-integration</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report-integration</id>
						<goals>
							<goal>report-integration</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- static code scanning -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<consoleOutput>true</consoleOutput>
					<outputFileFormat>xml</outputFileFormat>
					<!-- <outputFile>${project.build.directory}/codecheck/checkstyle.xml</outputFile> -->
					<configLocation>check/EclipseCheckStyleV1.1.xml</configLocation>
					<linkXRef>false</linkXRef>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>8.1</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.8</version>
				<configuration>
					<rulesets>
						<ruleset>${project.basedir}/check/pmd_rulesV1.1.xml</ruleset>
					</rulesets>
					<format>xml</format>
					<!-- <targetDirectory>${project.build.directory}/codecheck</targetDirectory> -->
					<printFailingErrors>true</printFailingErrors>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.4</version>
				<configuration>
					<xmlOutput>true</xmlOutput>
					<!-- <xmlOutputDirectory>${project.build.directory}/codecheck</xmlOutputDirectory> -->
				</configuration>
			</plugin>
			
			<!-- docker -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<images>
						<image>
							<name>${docker.image}:${docker.tags.version}</name>
							<build>
								<dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								
							</build>
						</image>
						
						<!--
						<image>
							<name>${docker.image}:${docker.tags.version}</name>
							<build>
								<from>${docker.base.image}</from>
								<ports>
									<port>8080</port>
								</ports>
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								<cmd>java  ${JAVA_OPTS} -jar /maven/${project.artifactId}-${project.version}.jar</cmd>
							</build>
						</image>
						-->
					</images>
				</configuration>
				
				<executions>
			    <execution>
			       <phase>install</phase>
			       <goals>
			         <goal>build</goal>
			         <goal>push</goal>
			       </goals>
			    </execution>
			    </executions>
			</plugin>

		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

</project>
